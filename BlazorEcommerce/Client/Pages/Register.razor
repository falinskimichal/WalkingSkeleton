@page "/register"
@inject IAuthService authService

<PageTitle>Registration</PageTitle>


<h3>Register</h3>

<EditForm Model="user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control"></InputText>
        <ValidationMessage For="@(() => user.Email)" />
    </div>
    <div class="mb-3">
        <label for="email">Password</label>
        <InputText id="Password" @bind-Value="user.Password" class="form-control" type="password"></InputText>
        <ValidationMessage For="@(() => user.Password)" />
    </div>
    <div class="mb-3">
        <label for="email">ConfirmPassword</label>
        <InputText id="ConfirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password"></InputText>
        <ValidationMessage For="@(() => user.ConfirmPassword)" />
    </div>
    <button type="submit" class="btn btn-primary">Register</button>

    <div class="@messageCssClass">
        <span>@message</span>
    </div>
</EditForm>

@code {
    UserRegister user = new UserRegister();

    string message = string.Empty;
    string messageCssClass = string.Empty;

    async Task HandleRegistration()
    {
        var result = await authService.Register(user);
        message = result.Message;
        if (!result.Success)
        {
            messageCssClass = "text-success";
        }
        else
        {
            messageCssClass = "text-danger";
        }
    }
}
